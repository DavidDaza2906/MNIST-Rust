{"message":"unused import: `std::process`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":106,"byte_end":118,"line_start":4,"line_end":4,"column_start":5,"column_end":17,"is_primary":true,"text":[{"text":"use std::process; // terminar procesos","highlight_start":5,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":102,"byte_end":119,"line_start":4,"line_end":4,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"use std::process; // terminar procesos","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::process`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::process; // terminar procesos\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `rand::Rng`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":173,"byte_end":182,"line_start":6,"line_end":6,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"use rand::Rng;","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":169,"byte_end":183,"line_start":6,"line_end":6,"column_start":1,"column_end":15,"is_primary":true,"text":[{"text":"use rand::Rng;","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `rand::Rng`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse rand::Rng;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `dZ2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2071,"byte_end":2074,"line_start":60,"line_end":60,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let dZ2 = A2 - one_hot_Y;","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2071,"byte_end":2074,"line_start":60,"line_end":60,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let dZ2 = A2 - one_hot_Y;","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"_dZ2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `dZ2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:60:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let dZ2 = A2 - one_hot_Y;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_dZ2`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `Z1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1893,"byte_end":1895,"line_start":58,"line_end":58,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1893,"byte_end":1895,"line_start":58,"line_end":58,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":"_Z1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `Z1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_Z1`\u001b[0m\n\n"}
{"message":"unused variable: `A1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1910,"byte_end":1912,"line_start":58,"line_end":58,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1910,"byte_end":1912,"line_start":58,"line_end":58,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":"_A1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `A1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_A1`\u001b[0m\n\n"}
{"message":"unused variable: `Z2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1927,"byte_end":1929,"line_start":58,"line_end":58,"column_start":52,"column_end":54,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":52,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1927,"byte_end":1929,"line_start":58,"line_end":58,"column_start":52,"column_end":54,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":52,"highlight_end":54}],"label":null,"suggested_replacement":"_Z2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `Z2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_Z2`\u001b[0m\n\n"}
{"message":"unused variable: `W1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1961,"byte_end":1963,"line_start":58,"line_end":58,"column_start":86,"column_end":88,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":86,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1961,"byte_end":1963,"line_start":58,"line_end":58,"column_start":86,"column_end":88,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":86,"highlight_end":88}],"label":null,"suggested_replacement":"_W1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `W1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:86\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_W1`\u001b[0m\n\n"}
{"message":"unused variable: `W2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1978,"byte_end":1980,"line_start":58,"line_end":58,"column_start":103,"column_end":105,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":103,"highlight_end":105}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1978,"byte_end":1980,"line_start":58,"line_end":58,"column_start":103,"column_end":105,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":103,"highlight_end":105}],"label":null,"suggested_replacement":"_W2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `W2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:103\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0m2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_W2`\u001b[0m\n\n"}
{"message":"unused variable: `X`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1995,"byte_end":1996,"line_start":58,"line_end":58,"column_start":120,"column_end":121,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":120,"highlight_end":121}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1995,"byte_end":1996,"line_start":58,"line_end":58,"column_start":120,"column_end":121,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":120,"highlight_end":121}],"label":null,"suggested_replacement":"_X","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `X`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:120\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mW1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_X`\u001b[0m\n\n"}
{"message":"unused variable: `Y_dev`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2349,"byte_end":2354,"line_start":74,"line_end":74,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let Y_dev = data_dev.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2349,"byte_end":2354,"line_start":74,"line_end":74,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let Y_dev = data_dev.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_Y_dev","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `Y_dev`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:74:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_dev = data_dev.slice(s![0, ..]).to_owned();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_Y_dev`\u001b[0m\n\n"}
{"message":"value assigned to `X_dev` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2462,"byte_end":2467,"line_start":76,"line_end":76,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    X_dev = X_dev.mapv(|x| x/255.0);","highlight_start":5,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `X_dev` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:76:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m76\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    X_dev = X_dev.mapv(|x| x/255.0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `Z1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2801,"byte_end":2803,"line_start":84,"line_end":84,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2801,"byte_end":2803,"line_start":84,"line_end":84,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":"_Z1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `Z1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_Z1`\u001b[0m\n\n"}
{"message":"unused variable: `A1`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2804,"byte_end":2806,"line_start":84,"line_end":84,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2804,"byte_end":2806,"line_start":84,"line_end":84,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"_A1","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `A1`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_A1`\u001b[0m\n\n"}
{"message":"unused variable: `Z2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2807,"byte_end":2809,"line_start":84,"line_end":84,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2807,"byte_end":2809,"line_start":84,"line_end":84,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":"_Z2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `Z2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_Z2`\u001b[0m\n\n"}
{"message":"unused variable: `A2`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2810,"byte_end":2812,"line_start":84,"line_end":84,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2810,"byte_end":2812,"line_start":84,"line_end":84,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":"_A2","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `A2`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_A2`\u001b[0m\n\n"}
{"message":"function `Relu_derivative` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1567,"byte_end":1582,"line_start":47,"line_end":47,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `Relu_derivative` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:47:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"function `backward_prop` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1879,"byte_end":1892,"line_start":58,"line_end":58,"column_start":4,"column_end":17,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":4,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `backward_prop` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `W1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":725,"byte_end":727,"line_start":23,"line_end":23,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"       let W1 = Array::random((10,784), Uniform::new(0.0, 1.0))-0.5;","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":725,"byte_end":727,"line_start":23,"line_end":23,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"       let W1 = Array::random((10,784), Uniform::new(0.0, 1.0))-0.5;","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"w1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:23:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m       let W1 = Array::random((10,784), Uniform::new(0.0, 1.0))-0.5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w1`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `W2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":863,"byte_end":865,"line_start":25,"line_end":25,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"       let W2 = Array::random((10,10), Uniform::new(0.0, 1.0))-0.5;","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":863,"byte_end":865,"line_start":25,"line_end":25,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"       let W2 = Array::random((10,10), Uniform::new(0.0, 1.0))-0.5;","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"w2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:25:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m       let W2 = Array::random((10,10), Uniform::new(0.0, 1.0))-0.5;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w2`\u001b[0m\n\n"}
{"message":"function `ReLu` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1014,"byte_end":1018,"line_start":29,"line_end":29,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn ReLu(X: &Array2<f64>) -> Array2<f64>{","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1014,"byte_end":1018,"line_start":29,"line_end":29,"column_start":4,"column_end":8,"is_primary":true,"text":[{"text":"fn ReLu(X: &Array2<f64>) -> Array2<f64>{","highlight_start":4,"highlight_end":8}],"label":null,"suggested_replacement":"re_lu","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `ReLu` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:29:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ReLu(X: &Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `re_lu`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1019,"byte_end":1020,"line_start":29,"line_end":29,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"fn ReLu(X: &Array2<f64>) -> Array2<f64>{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1019,"byte_end":1020,"line_start":29,"line_end":29,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"fn ReLu(X: &Array2<f64>) -> Array2<f64>{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:29:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn ReLu(X: &Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1095,"byte_end":1096,"line_start":32,"line_end":32,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"fn softmax(X:&Array2<f64>) -> Array2<f64>{","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1095,"byte_end":1096,"line_start":32,"line_end":32,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"fn softmax(X:&Array2<f64>) -> Array2<f64>{","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:32:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn softmax(X:&Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `X_exp` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1136,"byte_end":1141,"line_start":33,"line_end":33,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let X_exp = X.mapv(|x| x.exp());","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1136,"byte_end":1141,"line_start":33,"line_end":33,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let X_exp = X.mapv(|x| x.exp());","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"x_exp","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X_exp` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let X_exp = X.mapv(|x| x.exp());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x_exp`\u001b[0m\n\n"}
{"message":"variable `X_sum` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1174,"byte_end":1179,"line_start":34,"line_end":34,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let X_sum = X_exp.sum_axis(Axis(0));","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1174,"byte_end":1179,"line_start":34,"line_end":34,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let X_sum = X_exp.sum_axis(Axis(0));","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"x_sum","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X_sum` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:34:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let X_sum = X_exp.sum_axis(Axis(0));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x_sum`\u001b[0m\n\n"}
{"message":"variable `X_softmax` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1216,"byte_end":1225,"line_start":35,"line_end":35,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let X_softmax = X_exp/X_sum;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1216,"byte_end":1225,"line_start":35,"line_end":35,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let X_softmax = X_exp/X_sum;","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"x_softmax","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X_softmax` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:35:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let X_softmax = X_exp/X_sum;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x_softmax`\u001b[0m\n\n"}
{"message":"variable `W1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1280,"byte_end":1282,"line_start":40,"line_end":40,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1280,"byte_end":1282,"line_start":40,"line_end":40,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":"w1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:40:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w1`\u001b[0m\n\n"}
{"message":"variable `W2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1314,"byte_end":1316,"line_start":40,"line_end":40,"column_start":51,"column_end":53,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":51,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1314,"byte_end":1316,"line_start":40,"line_end":40,"column_start":51,"column_end":53,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":51,"highlight_end":53}],"label":null,"suggested_replacement":"w2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:40:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w2`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1348,"byte_end":1349,"line_start":40,"line_end":40,"column_start":85,"column_end":86,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":85,"highlight_end":86}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1348,"byte_end":1349,"line_start":40,"line_end":40,"column_start":85,"column_end":86,"is_primary":true,"text":[{"text":"fn forward_prop(W1 : Array2<f64>,b1: Array2<f64>, W2: Array2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){","highlight_start":85,"highlight_end":86}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:40:85\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mray2<f64>, b2: Array2<f64>, X: Array2<f64>) -> (Array2<f64>, Array2<f64>, Array2<f64> ,Array2<f64> ){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Z1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1431,"byte_end":1433,"line_start":41,"line_end":41,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let Z1 = W1.dot(&X) + &b1;","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1431,"byte_end":1433,"line_start":41,"line_end":41,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let Z1 = W1.dot(&X) + &b1;","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"z1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:41:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Z1 = W1.dot(&X) + &b1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z1`\u001b[0m\n\n"}
{"message":"variable `A1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1463,"byte_end":1465,"line_start":42,"line_end":42,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let A1 = ReLu(&Z1);","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1463,"byte_end":1465,"line_start":42,"line_end":42,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let A1 = ReLu(&Z1);","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"a1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:42:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let A1 = ReLu(&Z1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a1`\u001b[0m\n\n"}
{"message":"variable `Z2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1488,"byte_end":1490,"line_start":43,"line_end":43,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let Z2 = W2.dot(&A1) + &b2;","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1488,"byte_end":1490,"line_start":43,"line_end":43,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    let Z2 = W2.dot(&A1) + &b2;","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"z2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:43:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Z2 = W2.dot(&A1) + &b2;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z2`\u001b[0m\n\n"}
{"message":"variable `A2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1522,"byte_end":1524,"line_start":44,"line_end":44,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let  A2 = softmax(&Z2);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1522,"byte_end":1524,"line_start":44,"line_end":44,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let  A2 = softmax(&Z2);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":"a2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:44:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let  A2 = softmax(&Z2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a2`\u001b[0m\n\n"}
{"message":"function `Relu_derivative` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1567,"byte_end":1582,"line_start":47,"line_end":47,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1567,"byte_end":1582,"line_start":47,"line_end":47,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":"relu_derivative","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `Relu_derivative` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:47:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `relu_derivative`\u001b[0m\n\n"}
{"message":"variable `Z` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1583,"byte_end":1584,"line_start":47,"line_end":47,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"fn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1583,"byte_end":1584,"line_start":47,"line_end":47,"column_start":20,"column_end":21,"is_primary":true,"text":[{"text":"fn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{","highlight_start":20,"highlight_end":21}],"label":null,"suggested_replacement":"z","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:47:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn Relu_derivative(Z: &Array2<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1674,"byte_end":1675,"line_start":50,"line_end":50,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"fn one_hot(Y: &Array1<f64>) -> Array2<f64>{","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1674,"byte_end":1675,"line_start":50,"line_end":50,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"fn one_hot(Y: &Array1<f64>) -> Array2<f64>{","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:50:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn one_hot(Y: &Array1<f64>) -> Array2<f64>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `Y_one_hot` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1720,"byte_end":1729,"line_start":51,"line_end":51,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut Y_one_hot = Array::zeros((Y.len(), 10));","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1720,"byte_end":1729,"line_start":51,"line_end":51,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut Y_one_hot = Array::zeros((Y.len(), 10));","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"y_one_hot","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Y_one_hot` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:51:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut Y_one_hot = Array::zeros((Y.len(), 10));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `y_one_hot`\u001b[0m\n\n"}
{"message":"variable `Z1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1893,"byte_end":1895,"line_start":58,"line_end":58,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1893,"byte_end":1895,"line_start":58,"line_end":58,"column_start":18,"column_end":20,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":18,"highlight_end":20}],"label":null,"suggested_replacement":"z1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z1`\u001b[0m\n\n"}
{"message":"variable `A1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1910,"byte_end":1912,"line_start":58,"line_end":58,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1910,"byte_end":1912,"line_start":58,"line_end":58,"column_start":35,"column_end":37,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":35,"highlight_end":37}],"label":null,"suggested_replacement":"a1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a1`\u001b[0m\n\n"}
{"message":"variable `Z2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1927,"byte_end":1929,"line_start":58,"line_end":58,"column_start":52,"column_end":54,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":52,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1927,"byte_end":1929,"line_start":58,"line_end":58,"column_start":52,"column_end":54,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":52,"highlight_end":54}],"label":null,"suggested_replacement":"z2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:52\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z2`\u001b[0m\n\n"}
{"message":"variable `A2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1944,"byte_end":1946,"line_start":58,"line_end":58,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1944,"byte_end":1946,"line_start":58,"line_end":58,"column_start":69,"column_end":71,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":69,"highlight_end":71}],"label":null,"suggested_replacement":"a2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:69\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y:\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a2`\u001b[0m\n\n"}
{"message":"variable `W1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1961,"byte_end":1963,"line_start":58,"line_end":58,"column_start":86,"column_end":88,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":86,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1961,"byte_end":1963,"line_start":58,"line_end":58,"column_start":86,"column_end":88,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":86,"highlight_end":88}],"label":null,"suggested_replacement":"w1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:86\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0may2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w1`\u001b[0m\n\n"}
{"message":"variable `W2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1978,"byte_end":1980,"line_start":58,"line_end":58,"column_start":103,"column_end":105,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":103,"highlight_end":105}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1978,"byte_end":1980,"line_start":58,"line_end":58,"column_start":103,"column_end":105,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":103,"highlight_end":105}],"label":null,"suggested_replacement":"w2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:103\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0may2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w2`\u001b[0m\n\n"}
{"message":"variable `X` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":1995,"byte_end":1996,"line_start":58,"line_end":58,"column_start":120,"column_end":121,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":120,"highlight_end":121}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":1995,"byte_end":1996,"line_start":58,"line_end":58,"column_start":120,"column_end":121,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":120,"highlight_end":121}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:120\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mray2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x`\u001b[0m\n\n"}
{"message":"variable `Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2011,"byte_end":2012,"line_start":58,"line_end":58,"column_start":136,"column_end":137,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":136,"highlight_end":137}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2011,"byte_end":2012,"line_start":58,"line_end":58,"column_start":136,"column_end":137,"is_primary":true,"text":[{"text":"fn backward_prop(Z1: Array2<f64>, A1: Array2<f64>, Z2: Array2<f64>, A2: Array2<f64>, W1: Array2<f64>, W2: Array2<f64>, X: Array2<f64>, Y: Array1<f64>){","highlight_start":136,"highlight_end":137}],"label":null,"suggested_replacement":"y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Y` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:58:136\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m58\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\u001b[0mrray2<f64>, X: Array2<f64>, Y: Array1<f64>){\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `y`\u001b[0m\n\n"}
{"message":"variable `one_hot_Y` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2037,"byte_end":2046,"line_start":59,"line_end":59,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let one_hot_Y = one_hot(&Y);","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2037,"byte_end":2046,"line_start":59,"line_end":59,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let one_hot_Y = one_hot(&Y);","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"one_hot_y","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `one_hot_Y` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:59:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let one_hot_Y = one_hot(&Y);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `one_hot_y`\u001b[0m\n\n"}
{"message":"variable `dZ2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2071,"byte_end":2074,"line_start":60,"line_end":60,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let dZ2 = A2 - one_hot_Y;","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2071,"byte_end":2074,"line_start":60,"line_end":60,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"    let dZ2 = A2 - one_hot_Y;","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":"d_z2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `dZ2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:60:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let dZ2 = A2 - one_hot_Y;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `d_z2`\u001b[0m\n\n"}
{"message":"variable `Y_dev` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2349,"byte_end":2354,"line_start":74,"line_end":74,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let Y_dev = data_dev.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2349,"byte_end":2354,"line_start":74,"line_end":74,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    let Y_dev = data_dev.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"y_dev","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Y_dev` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:74:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_dev = data_dev.slice(s![0, ..]).to_owned();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `y_dev`\u001b[0m\n\n"}
{"message":"variable `X_dev` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2408,"byte_end":2413,"line_start":75,"line_end":75,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    let mut X_dev = data_dev.slice(s![1..n, ..]).to_owned();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2408,"byte_end":2413,"line_start":75,"line_end":75,"column_start":13,"column_end":18,"is_primary":true,"text":[{"text":"    let mut X_dev = data_dev.slice(s![1..n, ..]).to_owned();","highlight_start":13,"highlight_end":18}],"label":null,"suggested_replacement":"x_dev","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X_dev` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:75:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m75\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut X_dev = data_dev.slice(s![1..n, ..]).to_owned();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x_dev`\u001b[0m\n\n"}
{"message":"variable `Y_train` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2587,"byte_end":2594,"line_start":79,"line_end":79,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let Y_train = data_train.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2587,"byte_end":2594,"line_start":79,"line_end":79,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    let Y_train = data_train.slice(s![0, ..]).to_owned();","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"y_train","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Y_train` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:79:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let Y_train = data_train.slice(s![0, ..]).to_owned();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `y_train`\u001b[0m\n\n"}
{"message":"variable `X_train` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2650,"byte_end":2657,"line_start":80,"line_end":80,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut X_train = data_train.slice(s![1..n, ..]).to_owned();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2650,"byte_end":2657,"line_start":80,"line_end":80,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut X_train = data_train.slice(s![1..n, ..]).to_owned();","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"x_train","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `X_train` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:80:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut X_train = data_train.slice(s![1..n, ..]).to_owned();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `x_train`\u001b[0m\n\n"}
{"message":"variable `W1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2758,"byte_end":2760,"line_start":83,"line_end":83,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (W1,b1,W2,b2) = init_variables();","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2758,"byte_end":2760,"line_start":83,"line_end":83,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (W1,b1,W2,b2) = init_variables();","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":"w1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:83:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (W1,b1,W2,b2) = init_variables();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w1`\u001b[0m\n\n"}
{"message":"variable `W2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2764,"byte_end":2766,"line_start":83,"line_end":83,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (W1,b1,W2,b2) = init_variables();","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2764,"byte_end":2766,"line_start":83,"line_end":83,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (W1,b1,W2,b2) = init_variables();","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":"w2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `W2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:83:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (W1,b1,W2,b2) = init_variables();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `w2`\u001b[0m\n\n"}
{"message":"variable `Z1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2801,"byte_end":2803,"line_start":84,"line_end":84,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2801,"byte_end":2803,"line_start":84,"line_end":84,"column_start":10,"column_end":12,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":10,"highlight_end":12}],"label":null,"suggested_replacement":"z1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z1`\u001b[0m\n\n"}
{"message":"variable `A1` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2804,"byte_end":2806,"line_start":84,"line_end":84,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2804,"byte_end":2806,"line_start":84,"line_end":84,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"a1","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A1` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a1`\u001b[0m\n\n"}
{"message":"variable `Z2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2807,"byte_end":2809,"line_start":84,"line_end":84,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2807,"byte_end":2809,"line_start":84,"line_end":84,"column_start":16,"column_end":18,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":16,"highlight_end":18}],"label":null,"suggested_replacement":"z2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `Z2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case (notice the capitalization): `z2`\u001b[0m\n\n"}
{"message":"variable `A2` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\main.rs","byte_start":2810,"byte_end":2812,"line_start":84,"line_end":84,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\main.rs","byte_start":2810,"byte_end":2812,"line_start":84,"line_end":84,"column_start":19,"column_end":21,"is_primary":true,"text":[{"text":"    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);","highlight_start":19,"highlight_end":21}],"label":null,"suggested_replacement":"a2","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `A2` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\main.rs:84:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let (Z1,A1,Z2,A2) = forward_prop(W1,b1,W2,b2,X_train);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `a2`\u001b[0m\n\n"}
{"message":"56 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 56 warnings emitted\u001b[0m\n\n"}
